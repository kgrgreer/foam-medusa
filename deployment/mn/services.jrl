p({
  "class":"foam.core.boot.CSpec",
  "name":"medusaNodeBootstrapAgent",
  "lazy":false,
  "service": {
    "class": "foam.core.medusa.MedusaNodeBootstrapAgent"
  }
})

p({
  "class":"foam.core.boot.CSpec",
  "name":"medusaNodeDAO",
  "lazy":false,
  "serve":true,
  "serviceScript":`
    mdao = new foam.dao.MDAO(foam.core.medusa.MedusaEntry.getOwnClassInfo());
    mdao = new foam.core.medusa.ReplayingInfoDAO.Builder(x)
      .setUpdateIndex(true)
      .setDelegate(new foam.dao.FixedSizeDAO.Builder(x)
        .setComparator(foam.mlang.MLang.DESC(foam.core.medusa.MedusaEntry.INDEX))
        .setSize(100000)
        .setDelegate(mdao)
        .build())
      .build();
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.core.medusa.MedusaEntry.getOwnClassInfo())
      .setMdao(mdao)
      .setInnerDAO(
        new foam.core.medusa.MedusaUniqueDAO.Builder(x)
          .setDelegate(new foam.core.medusa.MedusaNodeJDAO(x, mdao,
            new foam.dao.java.JDAO(x, mdao, "ledger")))
          .build())
      .setRuler(false)
      .setCluster(false)
      .setPm(true)
      .setDecorator(new foam.core.medusa.MedusaEntryNoRemoveDAO.Builder(x)
      .setDelegate(new foam.core.medusa.ReplayNodeDAO.Builder(x)
        .setJournal(new foam.dao.F3FileJournal.Builder(x.put(foam.core.fs.Storage.class, x.get(foam.core.fs.FileSystemStorage.class)))
          .setFilename("ledger")
          .setCreateFile(false)
          .build())
      .setDelegate(new foam.core.medusa.MedusaSetNodeDAO.Builder(x)
      .setDelegate(new foam.core.medusa.MedusaHashingDAO.Builder(x)
      .setDelegate(new foam.core.medusa.MedusaSigningDAO.Builder(x)
      .setDelegate(new foam.core.medusa.MedusaBroadcastDAO.Builder(x)
      .setDelegate(new foam.core.medusa.MedusaBroadcastNARegionDAO.Builder(x)
        .setDelegate(new foam.dao.NullDAO(x, foam.core.medusa.MedusaEntry.getOwnClassInfo()))
        .build())
      .build())
      .build())
      .build())
      .build())
      .build())
      .build())
      .build();
  `,
  "client":"{\"of\":\"foam.core.medusa.MedusaEntry\", \"remoteListenerSupport\": false}"
})

// Menus entry point
p({
  "class": "foam.core.boot.CSpec",
  "name": "medusaEntryDAO",
  "serve": true,
  "serviceScript": `
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.core.medusa.MedusaEntry.getOwnClassInfo())
      .setInnerDAO(x.get("medusaNodeDAO"))
      .setCluster(false)
      .setRuler(false)
      .setEnableInterfaceDecorators(false)
      .setOrder(new foam.mlang.order.Comparator[] {
        new foam.mlang.order.Desc.Builder(x).setArg1(foam.core.medusa.MedusaEntry.INDEX).build()
      })
      .build();
  `,
  "client": "{\"of\":\"foam.core.medusa.MedusaEntry\"}"
})

// disable cron scheduler
p({
  "class":"foam.core.boot.CSpec",
  "name":"cronScheduler",
  "lazy":false,
  "enabled":false,
  "serviceScript":"""
    return new foam.core.cron.CronScheduler();
  """
})


p({
  "class":"foam.core.boot.CSpec",
  "name":"healthDAO",
  "serve":true,
  "serviceScript":
  """
  return new foam.dao.EasyDAO.Builder(x)
    .setOf(foam.core.medusa.MedusaHealth.getOwnClassInfo())
    .setCluster(false)
    .build()
  """,
  "client":
  """
  {
    "of":"foam.core.medusa.MedusaHealth"
  }
  """
})
